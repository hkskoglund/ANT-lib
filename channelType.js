/* global define: true */

if (typeof define !== 'function') { var define = require('amdefine')(module); }define(function (require,exports,module){  function ChannelType(type)  {    this.type = type;  }  ChannelType.prototype.BIDIRECTIONAL_SLAVE = 0x00;  ChannelType.prototype.BIDIRECTIONAL_MASTER = 0x10;  ChannelType.prototype.SHARED_BIDIRECTIONAL_SLAVE = 0x20;  ChannelType.prototype.SHARED_BIDIRECTIONAL_MASTER = 0x30;  ChannelType.prototype.SLAVE_RECEIVE_ONLY = 0x40;  ChannelType.prototype.MASTER_TRANSMIT_ONLY = 0x50;  ChannelType.prototype.toString = function ()  {    switch (this.type)    {      case ChannelType.prototype.BIDIRECTIONAL_SLAVE: return "Bidirectional SLAVE";      case ChannelType.prototype.BIDIRECTIONAL_MASTER: return "Bidirectional MASTER";      case ChannelType.prototype.SHARED_BIDIRECTIONAL_SLAVE: return "Shared bidirectional SLAVE";      case ChannelType.prototype.SHARED_BIDIRECTIONAL_MASTER: return "Shared bidirectional MASTER";      case ChannelType.prototype.SLAVE_RECEIVE_ONLY : return "SLAVE Receive Only (diagnostic)";      case ChannelType.prototype.MASTER_TRANSMIT_ONLY: return "MASTER Transmit Only(legacy)";      default : return 'undefined';    }  };  ChannelType.prototype.isSlave = function ()  {    if (this.type === ChannelType.prototype.BIDIRECTIONAL_SLAVE ||      this.type === ChannelType.prototype.SHARED_BIDIRECTIONAL_SLAVE ||      this.type === ChannelType.prototype.SLAVE_RECEIVE_ONLY_)      {        return true;      }    else    {      return false;    }  };  module.export = ChannelType;  return module.export;});