define(function(a){"use strict";function e(a){d.call(this,a),a&&this.log.logging&&this.log.log("log","USB options",a)}var d=a("usb/USBDevice");return e.prototype=Object.create(d.prototype,{constructor:{value:e,enumerable:!1,writeable:!0,configurable:!0}}),e.prototype.LIBUSB_TRANSFER_COMPLETED=0,e.prototype.LIBUSB_TRANSFER_ERROR=1,e.prototype.LIBUSB_TRANSFER_TIMED_OUT=2,e.prototype.LIBUSB_TRANSFER_CANCELLED=3,e.prototype.LIBUSB_TRANSFER_STALL=4,e.prototype.LIBUSB_TRANSFER_NO_DEVICE=5,e.prototype.LIBUSB_TRANSFER_OVERFLOW=6,e.prototype.getINendpointPacketSize=function(){return this.inEP.maximumPacketSize},e.prototype.transfer=function(a,b){var c=function(a){a.resultCode===e.prototype.LIBUSB_TRANSFER_COMPLETED?b():(this.log.logging&&this.log.log("error","Tx failed",a),b(new Error(chrome.runtime.lastError)))}.bind(this),d={direction:this.outEP.direction,endpoint:this.outEP.address,data:a.buffer};this.log.logging&&this.log.log("log","TX ",d,a),chrome.usb.bulkTransfer(this.connectionHandle,d,c)},e.prototype.listen=function(a){var b=0,c=10,d=this.options.length.in||this.inEP.maximumPacketSize;this.log.logging&&this.log.log("log","RX packet max length  "+d+" bytes");var f={direction:this.inEP.direction,endpoint:128|this.inEP.address,length:d},g=function(d){var f;if(d.resultCode===e.prototype.LIBUSB_TRANSFER_COMPLETED){b=0,f=new Uint8Array(d.data),this.log.logging&&this.log.log("log","Rx",d,f);try{this.log.logging&&console.time("RXparse"),a(void 0,f),this.log.logging&&console.timeEnd("RXparse")}catch(g){this.log.logging?this.log.log("error","Got onRX error",g,g.stack):console.error("Got onRX error",g,g.stack)}}else b++,this.log.logging&&this.log.log("error","Rx failed, resultCode ",d.resultCode,chrome.runtime.lastError.message),a(new Error(chrome.runtime.lastError.message));c>b?h():a(new Error("Too many attempts with error from LIBUSB. Listening on in endpoint stopped."))}.bind(this),h=function(){chrome.usb.bulkTransfer(this.connectionHandle,f,g)}.bind(this);this.log.logging&&this.log.log("log","Listening on RX endpoint, address "+f.endpoint+", max endpoint packet length is "+this.getINendpointPacketSize()),h()},e.prototype.exit=function(a){this.connectionHandle&&this.deviceInterface?chrome.usb.releaseInterface(this.connectionHandle,this.deviceInterface.interfaceNumber,function(){chrome.usb.closeDevice(this.connectionHandle,function(){a()})}.bind(this)):a(new Error("Wrong USB connection handle and/or device interface"))},e.prototype.init=function(a){var b=function(){this.log.logging&&this.log.log("log","Interface number "+this.deviceInterface.interfaceNumber+" claimed","in",this.inEP,"out",this.outEP);try{a()}catch(b){console.error(b,b.stack)}}.bind(this),c=function(c){c&&c.length>0?(this.log.logging&&this.log.log("log","Interfaces",c),this.deviceInterface=c[0],c[0].endpoints&&c[0].endpoints.length>1?(this.inEP=this.deviceInterface.endpoints[0],this.outEP=this.deviceInterface.endpoints[1],chrome.usb.claimInterface(this.connectionHandle,this.deviceInterface.interfaceNumber,b)):this.log.logging&&this.log.log("error","Failed to get in/out endpoint on interface")):a(new Error("Did not find interface of device"))}.bind(this),d=function(b){var d=0;this.options&&"undefined"==typeof this.options.device&&(this.log.logging?this.log.log("warn","No number for device specified, will choose the first (device 0)"):d=this.options.device),this.log.logging&&this.log.log("log","USB devices",b),b?b.length>0?(this.connectionHandle=b[d],this.log.logging&&this.log.log("log","Device(s) found: "+b.length," choosing device "+d,"Connectionhandle",this.connectionHandle),chrome.usb.listInterfaces(this.connectionHandle,c)):a(new Error("No USB devices was found")):a(new Error("Did not request correct permissions"))}.bind(this);this._enumerateDevicesInManifest(function(b){var c,e;if(b)a(b);else if(this.options.deviceId){for(this.log.logging&&this.log.log("log","Looking for device id ",this.options.deviceId,this.enumeratedDevices.length),e=0;e<this.enumeratedDevices.length;e++)if(this.enumeratedDevices[e].id===this.options.deviceId){c=this.enumeratedDevices[e],this.defaultDevice=e;break}this.enumeratedDevices.length>0&&"undefined"==typeof this.defaultDevice&&(this.log.logging&&this.log.log("warn","Did not find default device with id "+this.options.deviceId+", choosing the first enumerated device"),this.defaultDevice=0,c=this.enumeratedDevices[0]),c&&(this.log.logging&&this.log.log("log","Trying to open ANT device ",c),chrome.usb.findDevices({vendorId:c.vendorId,productId:c.productId},d)),this.options.deviceWatcher&&this.options.deviceWatcher.onEnumerationCompleted&&"function"==typeof this.options.deviceWatcher.onEnumerationCompleted&&this.options.deviceWatcher.onEnumerationCompleted()}else this.log.logging&&this.log.log("warn","No default device id specificed in USB options"),this.enumeratedDevices&&this.enumeratedDevices[0]&&(this.device=0,c=this.enumeratedDevices[0],this.defaultDevice=0,this.options.deviceWatcher&&this.options.deviceWatcher.onEnumerationCompleted&&"function"==typeof this.options.deviceWatcher.onEnumerationCompleted&&this.options.deviceWatcher.onEnumerationCompleted(),this.log.logging&&this.log.log("log","Trying to open ANT device ",c),chrome.usb.findDevices({vendorId:c.vendorId,productId:c.productId},d))}.bind(this))},e.prototype._enumerateDevicesInManifest=function(a){var c,d,f,b=0,e=function(d){var e;for(this.log.logging&&this.log.log("log","Found devices for "+f.name,d),e=0;e<d.length;e++)d[e].name=f.name,d[e].deviceNr=e,d[e].id="device"+d[e].device+"#vid"+d[e].vendorId+"#pid"+d[e].productId+"#devNr"+e,this.enumeratedDevices.push(d[e]);b++,c>b?g():(this.log.logging&&this.log.log("info","Enumerated devices",this.enumeratedDevices),"function"==typeof a&&a(void 0))}.bind(this),g=function(){f=d[b],this.log.logging&&this.log.log("log","Get devices for  ",f,b,c),chrome.usb.getDevices({vendorId:f.vendorId,productId:f.productId},e)}.bind(this);d=this._getUSBDevicesFromManifest(),this.log.logging&&this.log.log("log","ANT devices declared in manifest",d),c=d.length,this.enumeratedDevices=[],c>0?g():"function"==typeof a&&a(new Error("No ANT devices configured in manifest, cannot enumerate devices"))},e.prototype._getUSBDevicesFromManifest=function(){for(var a=chrome.runtime.getManifest().permissions,b=0;b<a.length;b++)if("object"==typeof a[b]&&a[b].usbDevices)return a[b].usbDevices},e});